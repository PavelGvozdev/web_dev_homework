"""
Домашнее задание модуля В5.9. Автор: Павел Гвоздев
Программа представляет собой декоратор @time_this, измеряющий среднее время работы декорируемой функции f().
Пользователю предлагается ввести количество запусков функции (не больше 20). Функция выполняется требуемое
количество раз и программа выводит сообщение с указанием среднего времени выполнения функции.
"""
#импортируем модуль, необходимый для работы со значениями времени
import time

def time_this(func):
    """
    функция-декоратор
    выводит сообщение с указанием результата работы программы
    """
    def wrapped(iter_count):
        #переменная содержит суммарное время выполнения функци
        avg_time = 0
        #переменная содержит количество итераций выполнения функци
        iter_count = iter_count
        #в цикле для каждой итерации выполнени функции вычисляется время выполнения
        for _ in range(iter_count):
            t0 = time.time()
            func(iter_count)
            t1 = time.time()
            avg_time += (t1 - t0)
        #переменная содержит среднее время выполнения функци
        avg_time /= iter_count
        print('Среднее время выполнения функции {0} секунд'.format(avg_time))
    return wrapped

@time_this
def f(iter_count):
    for j in range(1000000):
        pass


def main():
    """
    Осуществляет взаимодействие с пользователем, обрабатывает пользовательский ввод. 
    """
    iter_count = int(input("Введите количество итераций выполнения функции (положителное число не больше 20): "))
    # проверяем валидность ввода
    if 1 <= iter_count <= 20:
        f(iter_count)
    else:
        print('Ошибка. Число должно быть положителным целым, не больше 20.')

if __name__ == "__main__":
    main()